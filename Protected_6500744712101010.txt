-- Check if OrionLib GUI is already running and remove it
if game.CoreGui:FindFirstChild("Orion") then
    game.CoreGui:FindFirstChild("Orion"):Destroy()
end

-- Load OrionLib
local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/Giangplay/Script/main/Orion_Library_PE_V2.lua"))()
local GameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name

-- Get the player's display name
local player = game.Players.LocalPlayer
local displayName = player.DisplayName

-- Create Window
local Window = OrionLib:MakeWindow({
    IntroText = "DP HUB \240\159\144\137",
    IntroIcon = "rbxassetid://8834748103",
    Name = "DP HUB \240\159\144\137-MM2 | ".. identifyexecutor(),
    IntroToggleIcon = "rbxassetid://7734091286",
    HidePremium = false,
    SaveConfig = false,
    IntroEnabled = true,
    ConfigFolder = "Universal"
})

-- Replace 'User' text in bottom-left corner with Display Name
wait(1) -- Wait before attempting to replace the text
for _, v in pairs(game.CoreGui:GetDescendants()) do
    if v:IsA("TextLabel") and v.Text == "User" then
        v.Text = displayName
    end
end

-- Tabs
local Tab = Window:MakeTab({ Name = "Info", Icon = "rbxassetid://7734053426", PremiumOnly = false })
local Tab1 = Window:MakeTab({ Name = "Script", Icon = "rbxassetid://8997387937", PremiumOnly = false })
local Tab2 = Window:MakeTab({ Name = "Anti", Icon = "rbxassetid://7734056608", PremiumOnly = false })
local Tab5 = Window:MakeTab({ Name = "Local", Icon = "rbxassetid://4335489011", PremiumOnly = false })
local Tab7 = Window:MakeTab({ Name = "Misc", Icon = "rbxassetid://4370318685", PremiumOnly = false })
local Tab7 = Window:MakeTab({ Name = "Teleport", Icon = "rbxassetid://7733917120", PremiumOnly = false })
local Tab11 = Window:MakeTab({ Name = "Troller", Icon = "rbxassetid://7733673987", PremiumOnly = false })
local Tab15 = Window:MakeTab({ Name = "Credit", Icon = "rbxassetid://7733955511", PremiumOnly = false })

-- Info Tab Content
Tab:AddParagraph("DP HUB | Discord", " [ DP HUB ]: Thank you for choosing DP HUB! We truly appreciate your support.| [ Discord ]: Don’t forget to join our Discord for exclusive updates and to connect with our community!, go to the credits section ] | Good Luck")

Tab:AddLabel("Your Fps [ "..math.floor(workspace:GetRealPhysicsFPS()).." ]")
Tab:AddLabel("Your Ping [ "..game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString().." ]")
Tab:AddLabel("Player In Server [ "..#game.Players:GetPlayers().." / "..game.Players.MaxPlayers.." ]")
Tab:AddLabel("Server Time [ "..math.floor(workspace.DistributedGameTime / 60 / 60).." Hour | "..math.floor(workspace.DistributedGameTime / 60) - (math.floor(workspace.DistributedGameTime / 60 / 60) * 60).." Minute | "..math.floor(workspace.DistributedGameTime) - (math.floor(workspace.DistributedGameTime / 60) * 60).." Second ]")
Tab:AddLabel("Now Time [ "..os.date("%X").." ]")
Tab:AddLabel("Your Account Age [ "..game.Players.LocalPlayer.AccountAge.." ]")

local InfoServer = Tab:AddSection({Name = "Local Player"})

local function UpdateStats()
    local player = game.Players.LocalPlayer
    local character = player.Character
    local humanoid = character and character:FindFirstChildOfClass("Humanoid")

    if humanoid then
        if character:FindFirstChild("rock") then
            WalkspeedYou:Set("Walk Speed [ Not Walk then rock ]")
            JumppowerYou:Set("Jump Power [ Not Jump Power then rock ]")
            HealthYou:Set("Health You [ Not Health then rock ]")
            HipHeightYou:Set("Hip Height [ Not Hip then rock ]")
        else
            WalkspeedYou:Set("Walk Speed [ "..humanoid.WalkSpeed.." ]")
            JumppowerYou:Set("Jump Power [ "..humanoid.JumpPower.." ]")
            HealthYou:Set("Health You [ "..humanoid.Health.." ]")
            HipHeightYou:Set("Hip Height [ "..humanoid.HipHeight.." ]")
        end

        GravityYou:Set("Gravity [ "..game.Workspace.Gravity.." ]")

        if character:FindFirstChild("HumanoidRootPart") then
            local pos = character.HumanoidRootPart.Position
            PositionYou:Set("Position In Your [ "..math.round(pos.X)..", "..math.round(pos.Y)..", "..math.round(pos.Z).." ]")
        end
    end
end

WalkspeedYou = Tab:AddLabel("Walk Speed [ Loading... ]")
JumppowerYou = Tab:AddLabel("Jump Power [ Loading... ]")
HealthYou = Tab:AddLabel("Health You [ Loading... ]")
HipHeightYou = Tab:AddLabel("Hip Height [ Loading... ]")
GravityYou = Tab:AddLabel("Gravity [ Loading... ]")
PositionYou = Tab:AddLabel("Position In Your [ Loading... ]")

local AutoUpdateStats
Tab:AddToggle({
    Name = "Auto Set Local Stats",
    Default = false,
    Callback = function(Value)
        _G.AutoSetLocalStats = Value
        if Value then
            AutoUpdateStats = game:GetService("RunService").RenderStepped:Connect(UpdateStats)
        else
            if AutoUpdateStats then AutoUpdateStats:Disconnect() end
        end
    end
})

-- Ping Display
Tab:AddLabel("Current Ping:")

local PingLabel = Tab:AddLabel("Fetching...")

task.spawn(function()
    while true do
        local Ping = math.floor(game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue())
        PingLabel:Set("Ping: " .. Ping .. "ms")
        task.wait(1)
    end
end)

-- Logs Storage
local Logs = {"Click to view logs..."}

-- Button to Show Logs
local LogsButton = Tab:AddButton({
    Name = "View Logs",
    Callback = function()
        OrionLib:MakeNotification({
            Name = "Logs Opened",
            Content = "Showing logs below...",
            Image = "rbxassetid://4483345998",
            Time = 3
        })
    end
})

-- Logs Display
local LogsParagraph = Tab:AddParagraph("Logs", table.concat(Logs, "\n"))

-- Capture Game Logs
game:GetService("LogService").MessageOut:Connect(function(message, messageType)
    local prefix = "[INFO] "
    if messageType == Enum.MessageType.MessageWarning then
        prefix = "[WARNING] "
    elseif messageType == Enum.MessageType.MessageError then
        prefix = "[ERROR] "
    end
    
    local logMessage = prefix .. message
    table.insert(Logs, logMessage)
    if #Logs > 50 then -- Keep only last 50 logs
        table.remove(Logs, 1)
    end
    
    -- Update Logs Display
    LogsParagraph:Set(table.concat(Logs, "\n"))
end)

OrionLib:Init()

-- Script Tab Content
Tab1:AddButton({
    Name = "Execute Script",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/your_script_url_here"))()
    end
})

Tab1:AddTextbox({
    Name = "Enter Script URL",
    Default = "https://raw.githubusercontent.com/",
    TextDisappear = false,
    Callback = function(Value)
        loadstring(game:HttpGet(Value))()
    end
})

-- Various script execution buttons
Tab1:AddButton({
Name = "Synapse X [ PE Delta ]",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/delta-hydro/secret-host-haha/main/syn_ui_new.lua"))()
end    
})

Tab1:AddButton({
Name = "Codex [ PE ]",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Giangplay/Script/main/Codex.lua"))()
end    
})

Tab1:AddButton({
Name = "Kiwi [ PE ]",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Giangplay/Script/main/Kiwi-Ui.lua"))()
end    
})

Tab1:AddButton({
Name = "Krypton [ PE ]",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Giangplay/Script/main/Krypton.lua"))()
end    
})

Tab1:AddButton({
Name = "Krnl [ PE ]",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Giangplay/Script/main/Knrl.lua"))()
end    
})

Tab1:AddButton({
Name = "Animation [ PE ]",
Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/Joystickplays/AFEM/refs/heads/main/AFEM.lua'))()
end    
})

Tab1:AddButton({
Name = "Arceus x [ PE ]",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Giangplay/Script/main/Arceus_X_V3.lua"))()
end    
})

Tab1:AddButton({
Name = "Execute | Ui Library [ PE ]",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Giangplay/Script/main/Execute%20%7C%20UI%20Library.lua"))()
end    
})

Tab1:AddButton({
Name = "Kill Player [ PE ]",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Giangplay/Script/main/Kill%20player"))()
end    
})

Tab1:AddButton({
Name = "Keyboard",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/advxzivhsjjdhxhsidifvsh/mobkeyboard/main/main.txt", true))()
end    
})

Tab1:AddButton({
Name = "Rejoin Gui",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Giangplay/Script/main/Rejoin.lua"))()
end    
})

Tab1:AddButton({
Name = "Inf yield",
Callback = function()
loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
end    
})

Tab1:AddButton({
Name = "Hitbox",
Callback = function()
loadstring(game:HttpGet(("https://gist.githubusercontent.com/stellar-4242/430ef3087d8d87eb306ca03e728ffbb8/raw/798429dd908b1f4471a1fa569ff62c5e5a93ec61/SLAP.LUA")))()
end    
})

Tab1:AddButton({
Name = "CherryUi's SB GUI",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/RandomScriptr3/gggggggg/main/lolez.txt", true))()
end    
})

Tab1:AddButton({
Name = "Position Gui",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Giangplay/Script/main/Position_Gui.lua", true))()
end    
})

Tab1:AddButton({
Name = "Fe Fly V3",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Giangplay/Script/main/Fly_V3.lua"))()
end    
})

Tab1:AddButton({
Name = "MoonUI v10",
Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/IlikeyocutgHAH12/MoonUI-v10-/main/MoonUI%20v10'))()
end    
})

Tab1:AddButton({
Name = "Btool Cute",
Callback = function()
loadstring(game:GetObjects("rbxassetid://6695644299")[1].Source)()
end    
})

Tab1:AddButton({
Name = "Dex V2",
Callback = function()
loadstring(game:HttpGet("https://cdn.wearedevs.net/scripts/Dex%20Explorer.txt"))()
end    
})

Tab1:AddButton({
Name = "Dex V3",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/Universal/BypassedDarkDexV3.lua", true))()
end    
})

Tab1:AddButton({
Name = "TP gui player",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Giangplay/Script/main/TP_Player.lua"))()
end    
})

Tab1:AddButton({
Name = "Turies Spy",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Giangplay/Script/main/Reamsrpy.lua", true))()
end    
})

Tab1:AddButton({
Name = "Simple Spy",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Giangplay/Script/main/RemoteSpy-V2.lua", true))()
end    
})

Tab1:AddButton({
Name = "Hydroxide",
Callback = function()
local owner = "Upbolt"
local branch = "revision"
local function webImport(file)
return loadstring(game:HttpGetAsync(("https://raw.githubusercontent.com/%s/Hydroxide/%s/%s.lua"):format(owner, branch, file)), file .. '.lua')()
end
webImport("init")
webImport("ui/main")
end    
})

--Anti Tab
_G.AntiKnock = false
_G.AntiFling = false
_G.AntiVoid = false
_G.AntiAFK = false
_G.AntiKick = false
_G.AntiAdmin = false
_G.AntiRagdoll = false
_G.AllAnti = false

local detectedPlayers = {}
local connections = {}

local function disconnectConnection(name)
    if connections[name] then
        connections[name]:Disconnect()
        connections[name] = nil
    end
end

-- 🛡️ God-Level Anti-Knockback (Infinite Health Effect)
Tab2:AddToggle({
    Name = "God Mode Anti-Knockback",
    Default = false,
    Callback = function(state)
        _G.AntiKnock = state
        disconnectConnection("AntiKnock")
        if state then
            connections["AntiKnock"] = runService.Stepped:Connect(function()
                if player.Character and player.Character.PrimaryPart then
                    local root = player.Character.PrimaryPart
                    root.AssemblyLinearVelocity = Vector3.zero
                    root.AssemblyAngularVelocity = Vector3.zero
                    root.CustomPhysicalProperties = PhysicalProperties.new(math.huge, math.huge, 0)
                end
            end)
            OrionLib:MakeNotification({ Name = "God Mode Enabled", Content = "You are now immune to knockback and most damage!", Image = "rbxassetid://4483345998", Time = 5 })
        else
            OrionLib:MakeNotification({ Name = "God Mode Disabled", Content = "Knockback protection turned off.", Image = "rbxassetid://4483345998", Time = 5 })
        end
    end
})

-- 🛑 Anti-Fling
Tab2:AddToggle({
    Name = "Anti-Fling",
    Default = false,
    Callback = function(state)
        _G.AntiFling = state
        disconnectConnection("AntiFling")
        if state then
            connections["AntiFling"] = runService.Heartbeat:Connect(function()
                for _, pl in ipairs(game:GetService("Players"):GetPlayers()) do
                    if pl.Character and pl.Character.PrimaryPart then
                        local root = pl.Character.PrimaryPart
                        if root.AssemblyAngularVelocity.Magnitude > 50 or root.AssemblyLinearVelocity.Magnitude > 100 then
                            if not detectedPlayers[pl.Name] then
                                OrionLib:MakeNotification({ Name = "Flinger Detected!", Content = "Player " .. pl.Name .. " might be flinging!", Image = "rbxassetid://4483345998", Time = 5 })
                                detectedPlayers[pl.Name] = true    
                            end
                            for _, p in ipairs(pl.Character:GetDescendants()) do
                                if p:IsA("BasePart") then
                                    p.CanCollide = false
                                    p.AssemblyAngularVelocity = Vector3.zero
                                    p.AssemblyLinearVelocity = Vector3.zero
                                end
                            end
                        end
                    end
                end
            end)
        end
    end
})

-- 🔲 Anti-Void
Tab2:AddToggle({
    Name = "Anti-Void",
    Default = false,
    Callback = function(state)
        _G.AntiVoid = state
        if state then
            if not workspace:FindFirstChild("VoidPart") then
                local VoidPart = Instance.new("Part", workspace)
                VoidPart.Name = "VoidPart"
                VoidPart.Position = Vector3.new(0, -10, 0)
                VoidPart.Size = Vector3.new(5000, 1, 5000)
                VoidPart.Anchored = true
                VoidPart.Transparency = 1
                VoidPart.CanCollide = false
                VoidPart.Material = Enum.Material.ForceField
            end
        else
            if workspace:FindFirstChild("VoidPart") then
                workspace.VoidPart:Destroy()
            end
        end
    end
})

-- 💤 Anti-AFK
Tab2:AddToggle({
    Name = "Anti-AFK",
    Default = false,
    Callback = function(state)
        _G.AntiAFK = state
        if state then
            player.Idled:Connect(function()
                game:GetService("VirtualUser"):CaptureController()
                game:GetService("VirtualUser"):ClickButton2(Vector2.new())
            end)
        end
    end
})

-- 🚷 Anti-Kick
Tab2:AddToggle({
    Name = "Anti-Kick",
    Default = false,
    Callback = function(state)
        _G.AntiKick = state
        if state then
            local mt = getrawmetatable(game)
            setreadonly(mt, false)
            local old = mt.__namecall
            mt.__namecall = newcclosure(function(...)
                local args = {...}
                if getnamecallmethod() == "Kick" then
                    return nil
                end
                return old(...)
            end)
        end
    end
})

-- 🛃 Anti-Admin Detection
Tab2:AddToggle({
    Name = "Anti-Admin",
    Default = false,
    Callback = function(state)
        _G.AntiAdmin = state
        if state then
            game:GetService("Players").PlayerAdded:Connect(function(player)
                if player:IsInGroup(1200769) or player:IsInGroup(30549975) then
                    game.Players.LocalPlayer:Kick("Admin detected! Leaving to avoid being banned.")
                end
            end)
        end
    end
})

-- 🏋️ Anti-Ragdoll
Tab2:AddToggle({
    Name = "Anti-Ragdoll",
    Default = false,
    Callback = function(state)
        _G.AntiRagdoll = state
        if state then
            runService.Stepped:Connect(function()
                if player.Character and player.Character:FindFirstChild("Ragdolled") then
                    player.Character.Ragdolled:Destroy()
                end
            end)
        end
    end
})

-- 🔥 Enable All Anti Features
Tab2:AddButton({
    Name = "Enable All Anti Features",
    Callback = function()
        _G.AllAnti = not _G.AllAnti
        _G.AntiKnock = _G.AllAnti
        _G.AntiFling = _G.AllAnti
        _G.AntiVoid = _G.AllAnti
        _G.AntiAFK = _G.AllAnti
        _G.AntiKick = _G.AllAnti
        _G.AntiAdmin = _G.AllAnti
        _G.AntiRagdoll = _G.AllAnti

        -- Trigger all toggles
        for _, toggle in pairs(Tab2.Toggles) do
            toggle.Toggle(_G.AllAnti)
        end
        
        OrionLib:MakeNotification({ Name = "Anti Features Updated", Content = _G.AllAnti and "All protections enabled!" or "All protections disabled!", Image = "rbxassetid://7733658504", Time = 5 })
    end
})

OrionLib:Init()

--Local Features
Tab5:AddSlider({
	Name = "WalkSpeed",
	Min = 20,
	Max = 1000,
	Default = 20,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "WalkSpeed",
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
		Walkspeed = Value
	end    
})

Tab5:AddTextbox({
	Name = "WalkSpeed",
	Default = "UserSpeed",
	TextDisappear = false,
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
		Walkspeed = Value
	end	  
})

Tab5:AddToggle({
	Name = "Walkspeed Set Auto",
	Default = false,
	Callback = function(Value)
		KeepWalkspeed = Value
		while KeepWalkspeed do
			if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") ~= nil and game.Players.LocalPlayer.Character.Humanoid.WalkSpeed ~= Walkspeed then
				game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Walkspeed
			end
			task.wait()
		end
	end    
})

Tab5:AddSlider({
	Name = "JumpPower",
	Min = 50,
	Max = 1000,
	Default = 50,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "JumpPower",
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
		Jumppower = Value
	end    
})

Tab5:AddTextbox({
	Name = "Jumppower",
	Default = "UserPower",
	TextDisappear = false,
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
		Jumppower = Value
	end	  
})

Tab5:AddToggle({
	Name = "Jumppower Set Auto",
	Default = false,
	Callback = function(Value)
		KeepJumppower = Value
		while KeepJumppower do
			if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") ~= nil and game.Players.LocalPlayer.Character.Humanoid.JumpPower ~= Jumppower then
				game.Players.LocalPlayer.Character.Humanoid.JumpPower = Jumppower
			end
			task.wait()
		end
	end    
})

local FlySection = Tab5:AddSection({Name = "Fly Controls"})

_G.FlySpeed = 50
_G.FlyEnabled = false

Tab5:AddSlider({
    Name = "Fly Speed",
    Min = 10,
    Max = 100,
    Default = 50,
    Increment = 1,
    Callback = function(Value)
        _G.FlySpeed = Value
    end
})

local function Fly()
    local Player = game.Players.LocalPlayer
    local Character = Player.Character or Player.CharacterAdded:Wait()
    local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")

    if not HumanoidRootPart then return end

    _G.FlyEnabled = true
    local FlyLoop
    local UserInputService = game:GetService("UserInputService")

    local function StartFlying()
        FlyLoop = game:GetService("RunService").Stepped:Connect(function()
            if not _G.FlyEnabled then
                FlyLoop:Disconnect()
                return
            end

            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                HumanoidRootPart.Velocity = Vector3.new(0, _G.FlySpeed, 0)
            elseif UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
                HumanoidRootPart.Velocity = Vector3.new(0, -_G.FlySpeed, 0)
            else
                HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
            end
        end)
    end

    StartFlying()
end

Tab5:AddButton({
    Name = "Enable Fly",
    Callback = function()
        Fly()
    end
})

Tab5:AddButton({
    Name = "Disable Fly",
    Callback = function()
        _G.FlyEnabled = false
    end
})

OrionLib:Init()

Tab5:AddSlider({
	Name = "Gravity",
	Min = 0,
	Max = 600,
	Default = 196,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Gravity",
	Callback = function(Value)
		game.Workspace.Gravity = Value
		Gravity = Value
	end    
})

Tab5:AddToggle({
	Name = "Gravity Set Auto",
	Default = false,
	Callback = function(Value)
		KeepGravity = Value
		while KeepGravity do
			if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") ~= nil and game.Workspace.Gravity ~= nil and game.Workspace.Gravity ~= Gravity then
				game.Workspace.Gravity = Gravity
			end
			task.wait()
		end
	end    
})

-- FOV Slider
Tab5:AddSlider({
    Name = "Field of View (FOV)",
    Min = 30,
    Max = 120,
    Default = 70,
    Color = Color3.fromRGB(255, 0, 0),
    Increment = 1,
    ValueName = "FOV",
    Callback = function(Value)
        game.Workspace.CurrentCamera.FieldOfView = Value
    end
})

-- Subject Change Dropdown
Tab5:AddDropdown({
    Name = "Change Camera Subject",
    Default = "Humanoid",
    Options = {"Humanoid", "Head", "Torso"},
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        if player.Character then
            if Value == "Humanoid" then
                game.Workspace.CurrentCamera.CameraSubject = player.Character:FindFirstChildOfClass("Humanoid")
            else
                game.Workspace.CurrentCamera.CameraSubject = player.Character:FindFirstChild(Value)
            end
        end
    end
})

-- Hitbox Expansion Slider
Tab5:AddSlider({
    Name = "Hitbox Size",
    Min = 2,
    Max = 20,
    Default = 5,
    Color = Color3.fromRGB(255, 0, 0),
    Increment = 1,
    ValueName = "Hitbox Size",
    Callback = function(Value)
        _G.HitboxSize = Value
        for _, v in pairs(game.Players:GetChildren()) do
            if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                v.Character.HumanoidRootPart.Size = Vector3.new(Value, Value, Value)
                v.Character.HumanoidRootPart.Transparency = 0.75
            end
        end
    end
})

-- Hitbox Toggle
Tab5:AddToggle({
    Name = "Enable Hitbox Expansion",
    Default = false,
    Callback = function(Value)
        _G.HitboxEnabled = Value
        while _G.HitboxEnabled do
            for _, v in pairs(game.Players:GetChildren()) do
                if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                    v.Character.HumanoidRootPart.Size = Vector3.new(_G.HitboxSize, _G.HitboxSize, _G.HitboxSize)
                    v.Character.HumanoidRootPart.Transparency = 0.75
                end
            end
            task.wait()
        end
        if not _G.HitboxEnabled then
            for _, v in pairs(game.Players:GetChildren()) do
                if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                    v.Character.HumanoidRootPart.Size = Vector3.new(2, 2, 1)
                    v.Character.HumanoidRootPart.Transparency = 1
                end
            end
        end
    end
})

--Misc Tab
local InfoServer = Tab7:AddSection({Name = "ESP"}) -- Adds an "ESP" section

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local localPlayer = Players.LocalPlayer
local camera = workspace.CurrentCamera
local cache = {}

local ESP_SETTINGS = {
    Enabled = true,
    ShowBox = true,
    ShowHealth = true,
    ShowDistance = true,
    ShowTracer = true,
    ShowName = true,
    ShowSkeleton = true,
    TracerColor = Color3.fromRGB(255, 255, 255),
    TracerThickness = 2,
    BoxColor = Color3.fromRGB(0, 255, 0),
    HealthHighColor = Color3.fromRGB(0, 255, 0),
    HealthLowColor = Color3.fromRGB(255, 0, 0),
    NameColor = Color3.fromRGB(255, 255, 255),
    SkeletonColor = Color3.fromRGB(0, 255, 0)
}

-- Toggle ESP with a touch button
Tab7:AddButton({
    Name = "Toggle ESP (Touch)",
    Callback = function()
        ESP_SETTINGS.Enabled = not ESP_SETTINGS.Enabled
        OrionLib:MakeNotification({
            Name = "ESP Toggle",
            Content = "ESP is now " .. (ESP_SETTINGS.Enabled and "Enabled" or "Disabled"),
            Image = "rbxassetid://4483345998",
            Time = 2
        })
    end
})

-- Initialize Orion UI
OrionLib:Init()

-- ESP Logic (Remains the same as before)
local function create(class, properties)
    local drawing = Drawing.new(class)
    for property, value in pairs(properties) do
        drawing[property] = value
    end
    return drawing
end

local function createEsp(player)
    local esp = {
        box = create("Square", {Color = ESP_SETTINGS.BoxColor, Thickness = 1, Filled = false}),
        tracer = create("Line", {Thickness = ESP_SETTINGS.TracerThickness, Color = ESP_SETTINGS.TracerColor, Transparency = 1}),
        health = create("Line", {Thickness = 2}),
        distance = create("Text", {Color = Color3.new(1, 1, 1), Size = 12, Outline = true, Center = true}),
        name = create("Text", {Color = ESP_SETTINGS.NameColor, Size = 14, Outline = true, Center = true}),
        skeleton = {}
    }

    local bones = {"Head", "Torso", "Pelvis", "LeftArm", "RightArm", "LeftLeg", "RightLeg"}
    for _, bone in pairs(bones) do
        esp.skeleton[bone] = create("Line", {Color = ESP_SETTINGS.SkeletonColor, Thickness = 2})
    end

    cache[player] = esp
end

local function removeEsp(player)
    if cache[player] then
        for _, drawing in pairs(cache[player]) do
            if type(drawing) == "table" then
                for _, line in pairs(drawing) do
                    line:Remove()
                end
            else
                drawing:Remove()
            end
        end
        cache[player] = nil
    end
end

local function updateEsp()
    if not ESP_SETTINGS.Enabled then return end

    for player, esp in pairs(cache) do
        local character = player.Character
        if character then
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            local head = character:FindFirstChild("Head")
            local torso = character:FindFirstChild("UpperTorso") or character:FindFirstChild("Torso")
            local pelvis = character:FindFirstChild("LowerTorso") or character:FindFirstChild("HumanoidRootPart")
            local leftArm = character:FindFirstChild("LeftUpperArm")
            local rightArm = character:FindFirstChild("RightUpperArm")
            local leftLeg = character:FindFirstChild("LeftUpperLeg")
            local rightLeg = character:FindFirstChild("RightUpperLeg")

            if rootPart then
                local screenPos, onScreen = camera:WorldToViewportPoint(rootPart.Position)
                if onScreen then
                    local size = 50
                    local boxPos = Vector2.new(screenPos.X - size / 2, screenPos.Y - size / 2)

                    esp.box.Size = Vector2.new(size, size)
                    esp.box.Position = boxPos
                    esp.box.Visible = ESP_SETTINGS.ShowBox

                    esp.tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y - 20)
                    esp.tracer.To = Vector2.new(screenPos.X, screenPos.Y)
                    esp.tracer.Visible = ESP_SETTINGS.ShowTracer

                    if ESP_SETTINGS.ShowDistance then
                        local distance = (camera.CFrame.p - rootPart.Position).Magnitude
                        esp.distance.Text = string.format("%.1f studs", distance)
                        esp.distance.Position = Vector2.new(screenPos.X, screenPos.Y + size)
                        esp.distance.Visible = true
                    else
                        esp.distance.Visible = false
                    end

                    if ESP_SETTINGS.ShowHealth then
                        local humanoid = character:FindFirstChild("Humanoid")
                        if humanoid then
                            local healthPercentage = humanoid.Health / humanoid.MaxHealth
                            esp.health.From = Vector2.new(boxPos.X - 6, boxPos.Y + size)
                            esp.health.To = Vector2.new(boxPos.X - 6, boxPos.Y + (size * (1 - healthPercentage)))
                            esp.health.Color = ESP_SETTINGS.HealthLowColor:Lerp(ESP_SETTINGS.HealthHighColor, healthPercentage)
                            esp.health.Visible = true
                        else
                            esp.health.Visible = false
                        end
                    end

                    esp.name.Text = player.Name
                    esp.name.Position = Vector2.new(screenPos.X, screenPos.Y - size / 1.5)
                    esp.name.Visible = ESP_SETTINGS.ShowName

                    if ESP_SETTINGS.ShowSkeleton and torso and head and pelvis then
                        local function setBone(line, part1, part2)
                            if part1 and part2 then
                                local p1, vis1 = camera:WorldToViewportPoint(part1.Position)
                                local p2, vis2 = camera:WorldToViewportPoint(part2.Position)
                                if vis1 and vis2 then
                                    line.From = Vector2.new(p1.X, p1.Y)
                                    line.To = Vector2.new(p2.X, p2.Y)
                                    line.Visible = true
                                else
                                    line.Visible = false
                                end
                            else
                                line.Visible = false
                            end
                        end

                        setBone(esp.skeleton["Head"], head, torso)
                        setBone(esp.skeleton["Torso"], torso, pelvis)
                        setBone(esp.skeleton["LeftArm"], torso, leftArm)
                        setBone(esp.skeleton["RightArm"], torso, rightArm)
                        setBone(esp.skeleton["LeftLeg"], pelvis, leftLeg)
                        setBone(esp.skeleton["RightLeg"], pelvis, rightLeg)
                    end
                end
            end
        end
    end
end

Players.PlayerAdded:Connect(createEsp)
Players.PlayerRemoving:Connect(removeEsp)
RunService.RenderStepped:Connect(updateEsp)

--Glow ESP
local espEnabled = false

-- Function to create ESP highlights (prevents duplicate ESPs)
local function createESP(target, color, name)
    if target and not target:FindFirstChild(name) then
        local highlight = Instance.new("Highlight")
        highlight.Name = name
        highlight.Parent = target
        highlight.FillColor = color
        highlight.OutlineColor = color
        highlight.FillTransparency = 0.5
        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    end
end

-- Function to remove existing ESP highlights
local function removeESP(target, name)
    if target then
        local existingESP = target:FindFirstChild(name)
        if existingESP then
            existingESP:Destroy()
        end
    end
end

-- Function to update ESP for a single player
local function updatePlayerESP(player)
    if not espEnabled then return end

    if player ~= LocalPlayer and player.Character then
        createESP(player.Character, Color3.fromRGB(0, 255, 0), "PlayerESP")
    else
        removeESP(player.Character, "PlayerESP")
    end

    if player.Backpack:FindFirstChild("Knife") or (player.Character and player.Character:FindFirstChild("Knife")) then
        createESP(player.Character, Color3.fromRGB(255, 0, 0), "MurdererESP")
    else
        removeESP(player.Character, "MurdererESP")
    end

    if player.Backpack:FindFirstChild("Gun") or (player.Character and player.Character:FindFirstChild("Gun")) then
        createESP(player.Character, Color3.fromRGB(0, 0, 255), "SheriffESP")
    else
        removeESP(player.Character, "SheriffESP")
    end
end

-- Function to update ESP for gun drops
local function updateGunESP()
    if not espEnabled then return end

    for _, obj in ipairs(Workspace:GetChildren()) do
        if obj.Name == "GunDrop" then
            createESP(obj, Color3.fromRGB(255, 255, 0), "GunESP")
        else
            removeESP(obj, "GunESP")
        end
    end
end

-- Function to toggle ESP
local function toggleESP(state)
    espEnabled = state

    if not espEnabled then
        -- Remove all ESPs when disabled
        for _, player in ipairs(Players:GetPlayers()) do
            removeESP(player.Character, "PlayerESP")
            removeESP(player.Character, "MurdererESP")
            removeESP(player.Character, "SheriffESP")
        end
        for _, obj in ipairs(Workspace:GetChildren()) do
            removeESP(obj, "GunESP")
        end
    else
        -- Enable ESP if toggled on
        for _, player in ipairs(Players:GetPlayers()) do
            updatePlayerESP(player)
        end
        updateGunESP()
    end
end

-- Setup ESP for all players initially
for _, player in ipairs(Players:GetPlayers()) do
    if player.Character then
        updatePlayerESP(player)
    end
end

-- Connect player character updates
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        task.wait(1) -- Wait for character to fully load
        updatePlayerESP(player)
    end)
end)

-- Connect to game updates
Workspace.ChildAdded:Connect(function(child)
    task.wait(1) -- Wait for object to fully appear
    updateGunESP()
end)

-- Periodically refresh ESP to handle game state changes
task.spawn(function()
    while task.wait(1) do
        if espEnabled then
            for _, player in ipairs(Players:GetPlayers()) do
                updatePlayerESP(player)
            end
            updateGunESP()
        end
    end
end)

-- Orion UI Setup
local Window = OrionLib:MakeWindow({Name = "ESP Menu", HidePremium = false, SaveConfig = true, ConfigFolder = "ESPConfig"})

Window:MakeButton({
    Name = "GLOW ESP (recommended)",
    Callback = function()
        espEnabled = not espEnabled
        toggleESP(espEnabled)
        OrionLib:MakeNotification({
            Name = "ESP Toggled",
            Content = espEnabled and "ESP Enabled!" or "ESP Disabled!",
            Image = "rbxassetid://4483345998",
            Time = 3
        })
    end
})

OrionLib:Init()

-- Variables
local ESPEnabled = false
local ESPRange = 100 -- Default range
local espObjects = {}

-- Function to create ESP highlight (yellow circle)
local function createESP(part)
    if part and part:IsA("BasePart") and not part:FindFirstChild("ESPHighlight") then
        local highlight = Instance.new("Highlight")
        highlight.Name = "ESPHighlight"
        highlight.Parent = part
        highlight.FillColor = Color3.fromRGB(255, 255, 0) -- Yellow color
        highlight.FillTransparency = 0.5
        highlight.OutlineTransparency = 1 -- Hide outline

        table.insert(espObjects, highlight)
    end
end

-- Function to enable ESP within the selected range
local function enableCoinESP()
    for _, v in pairs(workspace:GetChildren()) do
        if v:IsA("Model") and v:FindFirstChild("CoinContainer") then
            for _, coin in pairs(v.CoinContainer:GetChildren()) do
                if coin:IsA("BasePart") and (game.Players.LocalPlayer:DistanceFromCharacter(coin.Position) <= ESPRange) then
                    createESP(coin)
                end
            end
        end
    end
end

-- Function to clear ESP
local function clearESP()
    for _, obj in pairs(espObjects) do
        if obj and obj.Parent then
            obj:Destroy()
        end
    end
    espObjects = {}
end

-- Function to update ESP continuously
local function updateESP()
    while task.wait(1) do
        if ESPEnabled then
            clearESP()
            enableCoinESP()
        end
    end
end

-- Start ESP loop
task.spawn(updateESP)

-- Orion Lib UI
local Tab = Window:MakeTab({Name = "Coin ESP", Icon = "rbxassetid://4483345998", PremiumOnly = false})

Tab:AddToggle({
    Name = "Enable Coin ESP",
    Default = false,
    Callback = function(state)
        ESPEnabled = state
        if not state then
            clearESP()
        end
    end
})

Tab:AddSlider({
    Name = "ESP Range",
    Min = 10,
    Max = 500,
    Default = 100,
    Increment = 10,
    Callback = function(value)
        ESPRange = value
    end
})

OrionLib:Init()

local InfoServer = Tab7:AddSection({Name = "TROLL"}) -- Adds an "TROLL" section

--WalkFling
local walkflinging = false

local function toggleWalkFling()
    walkflinging = not walkflinging
    if walkflinging then
        OrionLib:MakeNotification({
            Name = "Walkfling",
            Content = "Walkfling Enabled!",
            Image = "rbxassetid://4483345998",
            Time = 3
        })
        
        repeat RunService.Heartbeat:Wait()
            local character = game.Players.LocalPlayer.Character
            local root = character and character:FindFirstChild("HumanoidRootPart")
            local vel, movel = nil, 0.1

            if root then
                vel = root.Velocity
                root.Velocity = vel * 10000 + Vector3.new(0, 10000, 0)
                
                RunService.RenderStepped:Wait()
                root.Velocity = vel

                RunService.Stepped:Wait()
                root.Velocity = vel + Vector3.new(0, movel, 0)
                movel = movel * -1
            end
        until not walkflinging
    else
        OrionLib:MakeNotification({
            Name = "Walkfling",
            Content = "Walkfling Disabled!",
            Image = "rbxassetid://4483345998",
            Time = 3
        })
    end
end

Window:MakeTab({
    Name = "Walkfling",
    Icon = "rbxassetid://4483345998"
}):AddButton({
    Name = "Toggle Walkfling",
    Callback = toggleWalkFling
})

OrionLib:Init()

--FlyFling
local flyflinging = false
local function toggleFlyFling()
    flyflinging = not flyflinging
    if flyflinging then
        OrionLib:MakeNotification({
            Name = "Flyfling",
            Content = "Flyfling Enabled!",
            Image = "rbxassetid://4483345998",
            Time = 3
        })

        local player = game.Players.LocalPlayer
        local character = player.Character
        local root = character and character:FindFirstChild("HumanoidRootPart")
        if root then
            local bv = Instance.new("BodyVelocity", root)
            bv.Velocity = Vector3.new(0, 50, 0)
            bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            bv.Name = "FlyFlingVelocity"

            local bg = Instance.new("BodyGyro", root)
            bg.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
            bg.CFrame = root.CFrame
            bg.Name = "FlyFlingGyro"

            game:GetService("RunService").Heartbeat:Connect(function()
                if flyflinging and root then
                    root.Velocity = root.Velocity * 100 + Vector3.new(0, 1000, 0)
                end
            end)
        end
    else
        OrionLib:MakeNotification({
            Name = "Flyfling",
            Content = "Flyfling Disabled!",
            Image = "rbxassetid://4483345998",
            Time = 3
        })
        
        local player = game.Players.LocalPlayer
        local character = player.Character
        local root = character and character:FindFirstChild("HumanoidRootPart")
        if root then
            if root:FindFirstChild("FlyFlingVelocity") then root.FlyFlingVelocity:Destroy() end
            if root:FindFirstChild("FlyFlingGyro") then root.FlyFlingGyro:Destroy() end
        end
    end
end

Window:MakeTab({
    Name = "Flyfling",
    Icon = "rbxassetid://4483345998"
}):AddButton({
    Name = "Toggle Flyfling",
    Callback = toggleFlyFling
})

OrionLib:Init()

--AutoFarm
local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local replicatedStorage = game:GetService("ReplicatedStorage")

-- Message System (Displays in Lobby or Cooldown)
local function displayMessage(msg)
    OrionLib:MakeNotification({
        Name = "AutoFarm Notification",
        Content = msg,
        Time = 5
    })
end

local function isInLobby()
    local roundStatus = replicatedStorage:FindFirstChild("RoundStatus")
    return roundStatus and roundStatus.Value == "Lobby"
end

if isInLobby() then
    displayMessage("Waiting for the round to start...")
end

local autoFarmEnabled = false
local speedValue = 12 -- Set to max speed

function teleportToCoin(coin)
    humanoidRootPart.CFrame = coin.CFrame
    if coin:FindFirstChild("TouchInterest") then
        firetouchinterest(humanoidRootPart, coin, 0)
        firetouchinterest(humanoidRootPart, coin, 1)
    end
    wait(0.1)
    humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
end

function tweenToCoin(coin)
    local distance = (humanoidRootPart.Position - coin.Position).Magnitude
    local tweenSpeed = distance / speedValue
    tweenSpeed = math.max(tweenSpeed, 0.5)
    local tweenInfo = TweenInfo.new(tweenSpeed, Enum.EasingStyle.Cubic, Enum.EasingDirection.InOut)
    local tweenGoal = {CFrame = coin.CFrame}
    local tween = TweenService:Create(humanoidRootPart, tweenInfo, tweenGoal)
    tween:Play()
    tween.Completed:Wait()
    if coin:FindFirstChild("TouchInterest") then
        firetouchinterest(humanoidRootPart, coin, 0)
        firetouchinterest(humanoidRootPart, coin, 1)
    end
    wait(0.1)
end

function startAutoFarm()
    autoFarmEnabled = true
    while autoFarmEnabled do
        if isInLobby() then
            displayMessage("AutoFarm paused, waiting for round to start...")
        else
            displayMessage("Farming coins...")
            local coinContainer = workspace:FindFirstChild("CoinContainer")
            if coinContainer then
                for _, coin in ipairs(coinContainer:GetChildren()) do
                    if autoFarmEnabled and coin:IsA("BasePart") then
                        tweenToCoin(coin)
                    end
                end
            end
        end
        wait(1)
    end
end

startAutoFarm() -- Start AutoFarm immediately
OrionLib:Init()

Tab7:AddParagraph("BETA AUTOFARM
    This is the beta version of the AutoFarm. A separate AutoFarm is being developed that will work while you are AFK! 
    JOIN DISCORD NOW for updates!")
